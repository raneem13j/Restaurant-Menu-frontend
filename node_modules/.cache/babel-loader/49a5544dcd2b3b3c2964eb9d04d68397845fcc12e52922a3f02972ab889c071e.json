{"ast":null,"code":"var _jsxFileName = \"/home/raneem/restaurant-menu-frontend/src/components/category.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const token = Cookies.get(\"token\");\n  // const config2 = {\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //     \"Authorization\": `Bearer ${token}`,\n  //   },\n  // };\n\n  const [categories, setCategories] = useState([]);\n  const [category, setCategory] = useState({\n    category: \"\"\n  });\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/category\");\n        setCategories(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCategories();\n  }, []);\n  const handleCategoryChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCategory({\n      ...category,\n      [name]: value\n    });\n  };\n  const handleCreateCategory = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/category\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...token.headers // Merge headers from config2\n        },\n\n        body: JSON.stringify({\n          category: category.category\n        })\n      });\n      if (response.ok) {\n        // Handle success, e.g., clear form fields or show a success message\n        setCategory({\n          category: \"\"\n        });\n      } else {\n        // Handle error, e.g., display an error message\n        console.error(\"Failed to create category\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"list1\",\n          children: \"list of Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 12\n        }, this), categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: category.category\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subcat-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Creat Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"cat-edit-form\",\n          onSubmit: handleCreateCategory,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"About_username\",\n              children: \"Category name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"subcat-edit-input\",\n              type: \"text\",\n              id: \"username\",\n              placeholder: \"Category name\",\n              name: \"category\",\n              value: category.category,\n              onChange: handleCategoryChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"subcat-edit-button\",\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Category, \"B9TTZ+KL/jl2Jfn4DRCvcbx52eM=\");\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","Category","_s","token","get","categories","setCategories","category","setCategory","fetchCategories","response","data","error","console","handleCategoryChange","event","name","value","target","handleCreateCategory","preventDefault","fetch","method","headers","body","JSON","stringify","ok","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","i","onSubmit","type","id","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/raneem/restaurant-menu-frontend/src/components/category.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\n\n\nconst Category = () => {\n  const token = Cookies.get(\"token\");\n  // const config2 = {\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //     \"Authorization\": `Bearer ${token}`,\n  //   },\n  // };\n\nconst [categories, setCategories] = useState([]);\nconst [category, setCategory] = useState({\n    category: \"\",\n  });\n\nuseEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get(\n          \"http://localhost:5000/category\"\n        );\n        setCategories(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  const handleCategoryChange = (event) => {\n    const { name, value } = event.target;\n    setCategory({ ...category, [name]: value });\n  };\n\n  const handleCreateCategory = async (event) => {\n    \n    event.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/category\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...token.headers, // Merge headers from config2\n        },\n        body: JSON.stringify({\n          category: category.category,\n        }),\n      });\n  \n      if (response.ok) {\n        // Handle success, e.g., clear form fields or show a success message\n        setCategory({\n          category: \"\",\n        });\n      } else {\n        // Handle error, e.g., display an error message\n        console.error(\"Failed to create category\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n\n    \n\n\n\n  return (\n    <>\n      <div className=\"category-table\">\n        <div className=\"list-category\" >\n           <h3 className=\"list1\">list of Categories</h3>\n                  {categories.map((category, i) => (\n                   <p key={i}>{category.category}</p>\n                  ))}\n               \n        </div>\n        <div className=\"subcat-form-container\">\n          <h1>Creat Category</h1>\n          <form\n            className=\"cat-edit-form\"\n            onSubmit={handleCreateCategory}\n            \n          >\n            <div className=\"username\">\n              <label className=\"About_username\">Category name:</label> <br />\n              <input\n                className=\"subcat-edit-input\"\n                type=\"text\"\n                id=\"username\"\n                placeholder=\"Category name\"\n                name=\"category\"\n                value={category.category}\n                onChange={handleCategoryChange}\n              />\n            </div>\n            <button className=\"subcat-edit-button\" type=\"submit\">\n             Create\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Category;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}